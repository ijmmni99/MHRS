@model MHRS.Models.Activity

@{
    ViewBag.Title = "Edit_Activity";
}
@using (Html.BeginForm("Edit_Activity", "Activity", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Activity_ID)

    <section class="forms">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="section-heading">
                        <h2>Edit Activity</h2>
                    </div>
                    <form id="contact" action="" method="post">
                        <div class="row">
                            <div class="col-md-6">
                                <fieldset>
                                    <label for="demo-priority-medium">Activity Name </label>
                                    @Html.EditorFor(model => model.Activity_Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter activity name here.." } })
                                    @Html.ValidationMessageFor(model => model.Activity_Name, "", new { @class = "text-danger" })
                                </fieldset>
                            </div>

                            <div class="col-md-6">
                                <fieldset>
                                    <label for="demo-priority-medium">Date </label>
                                    @Html.EditorFor(model => model.Activity_Date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Activity_Date, "", new { @class = "text-danger" })
                                </fieldset>
                            </div>
                            <div class="col-md-6">
                                <fieldset>
                                    <label for="demo-priority-medium">Description </label>
                                    @Html.TextAreaFor(x => x.Descriptions, new { @class = "form-control", rows = "3", @placeholder = "Enter Description.." })
                                    @Html.ValidationMessageFor(model => model.Descriptions, "", new { @class = "text-danger" })
                                </fieldset>
                            </div>

                            <div class="col-md-6">

                                <div class="radio-item">
                                    @if (string.IsNullOrWhiteSpace(Model.Activity_Status))
                                    {
                                        <input id="status" name="status" type="checkbox" value="Completed" />
                                    }
                                    else
                                    {
                                        <input id="status" name="status" type="checkbox" value="@Model.Activity_Status" checked/>
                                    }
                                    <label for="status">End Activity</label>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <fieldset>
                                    <label for="demo-priority-medium"> Upload Image/Poster </label>
                                    <input type="file" name="postedFile" onchange="readURL(this);" />
                                    <img id="blah" src="#" alt="your image" style="width: 70%"/>
                                </fieldset>
                            </div>

                            <div class="primary-button col-md-12">
                                @Html.ActionLink("Back", "Activity", new { id = ViewBag.staffid }, new { @class = "button" })
                                <button type="submit" id="form-submit" class="button">Next</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
}


<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah')
                    .attr('src', e.target.result)
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>